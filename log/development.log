  [1m[36m (25.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (118.2ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateItems (20161221115800)
  [1m[35m (0.3ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/nextacademy/Desktop/NEXT/indiv-assess/db/migrate/20161221115800_create_items.rb:9)
  [1m[36m (16.3ms)[0m  [1mCREATE TABLE "items" ("id" serial primary key, "name" character varying NOT NULL, "description" text NOT NULL, "price" integer NOT NULL, "email" character varying NOT NULL, "role" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221115800"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to AddImageToItems (20161221124800)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "items" ADD "image" character varying[0m
  [1m[35mSQL (2.9ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221124800"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to CreatePurchases (20161221141100)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/nextacademy/Desktop/NEXT/indiv-assess/db/migrate/20161221141100_create_purchases.rb:7)
  [1m[36m (18.7ms)[0m  [1mCREATE TABLE "purchases" ("id" serial primary key, "email" character varying NOT NULL, "item_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221141100"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to AddAvailableToItems (20161221152600)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (13.8ms)[0m  [1mALTER TABLE "items" ADD "available" bool DEFAULT 't' NOT NULL[0m
  [1m[35mSQL (1.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221152600"]]
  [1m[36m (4.8ms)[0m  [1mCOMMIT[0m
Migrating to CreateUsers (20161221165000)
  [1m[35m (0.3ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/nextacademy/Desktop/NEXT/indiv-assess/db/migrate/20161221165000_create_users.rb:8)
  [1m[36m (12.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "username" character varying NOT NULL, "email" character varying NOT NULL, "password_hash" character varying NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221165000"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddUserIdToItems (20161221170100)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "items" ADD "seller_id" integer[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221170100"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to AddUserIdToPurchases (20161221172400)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "purchases" ADD "purchaser_id" integer[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221172400"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to RemoveEmailFromItems (20161221175300)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "items" DROP "email"[0m
  [1m[35mSQL (4.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221175300"]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
Migrating to RemoveEmailFromPurchases (20161221181400)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "purchases" DROP "email"[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161221181400"]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
Migrating to AddNotNullConstraintToItemsAndPurchases (20161221190300)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "purchases" ALTER COLUMN "purchaser_id" TYPE integer[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "purchases" ALTER "purchaser_id" SET NOT NULL
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "items" ALTER COLUMN "seller_id" TYPE integer[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "items" ALTER "seller_id" SET NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20161221190300"]]
  [1m[35m (1.5ms)[0m  COMMIT
Migrating to ChangePriceToBuyItNowPrice (20161221192900)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (12.8ms)[0m  ALTER TABLE "items" ALTER COLUMN "price" TYPE decimal(10,2)
  [1m[36m (2.9ms)[0m  [1mALTER TABLE "items" ALTER "price" DROP NOT NULL[0m
  [1m[35m (3.1ms)[0m  ALTER TABLE "items" RENAME COLUMN "price" TO "buy_it_now_price"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20161221192900"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to AddAuctionEndTimeAndCurrentBid (20161222093900)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "items" ADD "auction_end_time" timestamp
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "items" ADD "starting_bid_price" decimal(10,2)[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161222093900"]]
  [1m[36m (34.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateBids (20161222113800)
  [1m[35m (0.3ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/nextacademy/Desktop/NEXT/indiv-assess/db/migrate/20161222113800_create_bids.rb:8)
  [1m[36m (9.0ms)[0m  [1mCREATE TABLE "bids" ("id" serial primary key, "item_id" integer NOT NULL, "bidder_id" integer NOT NULL, "amount" decimal(10,2) NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161222113800"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateTags (20161222162400)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/nextacademy/Desktop/NEXT/indiv-assess/db/migrate/20161222162400_create_tags.rb:6)
  [1m[36m (9.4ms)[0m  [1mCREATE TABLE "tags" ("id" serial primary key, "name" character varying NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161222162400"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20161222171200)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/nextacademy/Desktop/NEXT/indiv-assess/db/migrate/20161222171200_create_taggings.rb:7)
  [1m[36m (5.8ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "item_id" integer NOT NULL, "tag_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20161222171200"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (15.9ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'bids'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'items'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (12.9ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'purchases'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (12.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (4.6ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (12.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

